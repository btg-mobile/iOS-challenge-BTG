//
//  DetailInteractor.swift
//  TheMovieDB
//
//  Created by Usuario on 29/01/20.
//  Copyright (c) 2020 Usuario. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailBusinessLogic
{
  func AddMovieInStorage(request: DetailScene.AddMovie.Request)
  func DeleteMovie(request: DetailScene.DeleteMovie.Request)
  func isFavorite(request: DetailScene.IsFavorite.Request)
}

protocol DetailDataStore
{
  var movie: Movie? { get set }
  var isFavorite: Bool? { get set }
}

class DetailInteractor: DetailBusinessLogic, DetailDataStore
{
  var presenter: DetailPresentationLogic?
  var movie: Movie?
  var worker: FavoriteWorker?
  var isFavorite: Bool?
       
  init( favoriteWorker: FavoriteWorker = FavoriteWorker()) {
    worker = favoriteWorker
  }
  
  // MARK: Do something
    
  func AddMovieInStorage(request: DetailScene.AddMovie.Request) {
    guard let result = worker?.createMovie(movie: request.movie) else { return }
    let response = DetailScene.AddMovie.Response(result: result)
    presenter?.presentStorageResult(response: response)
  }
    
  func isFavorite(request: DetailScene.IsFavorite.Request) {
    guard let result = worker?.isFavorite(movieId: request.movieId) else { return }
    let response = DetailScene.IsFavorite.Response(result: result)
    presenter?.presentIsFavorite(response: response)
  }
    
  func DeleteMovie(request: DetailScene.DeleteMovie.Request) {
    guard let result = worker?.deleteMovie(movieId: request.movieId) else { return }
    let response = DetailScene.DeleteMovie.Response(result: result)
    presenter?.presentDeleteMovie(response: response)
  }
}
