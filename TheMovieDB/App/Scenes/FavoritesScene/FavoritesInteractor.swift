//
//  FavoritesInteractor.swift
//  TheMovieDB
//
//  Created by Usuario on 28/01/20.
//  Copyright (c) 2020 Usuario. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FavoritesBusinessLogic
{
  func getMovies(request: FavoritesScene.GetMovies.Request)
  func selectMovie(request: FavoritesScene.SelectMovie.Request)
}

protocol FavoritesDataStore
{
  var movie: Movie? { get set }
}

class FavoritesInteractor: FavoritesBusinessLogic, FavoritesDataStore
{
  var presenter: FavoritesPresentationLogic?
  var worker: FavoriteWorker?
  var movie: Movie?
         
  init( favoriteWorker: FavoriteWorker = FavoriteWorker()) {
    worker = favoriteWorker
  }
    
  func getMovies(request: FavoritesScene.GetMovies.Request) {
    guard let movies =  worker?.getMovies() else { return }
    let response = FavoritesScene.GetMovies.Response(movies: movies)
    presenter?.presentMovies(response: response)
  }
    
  func selectMovie(request: FavoritesScene.SelectMovie.Request) {
    let selectedMovie = request.movie
    let genres: String = selectedMovie.value(forKey: "genreIds") as? String ?? ""
    let genresArray = genres.components(separatedBy: ",")
    print(genresArray)
    
    let newMovie: Movie = Movie(
        id: selectedMovie.value(forKey: "id") as? Int64 ?? 0,
        title: selectedMovie.value(forKey: "title") as? String ?? "",
        releaseDate: selectedMovie.value(forKey: "releaseDate") as? String ?? "" ,
        overview: selectedMovie.value(forKey: "overview") as? String ?? "",
        genreIds: [],
        voteAverage: selectedMovie.value(forKey: "voteAverage") as? Decimal ?? 0.0,
        posterPath: selectedMovie.value(forKey: "posterPath") as? String ?? "")
    movie = newMovie
    let response = FavoritesScene.SelectMovie.Response()
    presenter?.presentSelectedMovie(response: response)
  }
}
